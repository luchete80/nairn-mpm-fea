! Subroutines
! adjust limits (xmin,max,ymin,ymax) to contain the point
Sub CheckPoint,#xpt,#ypt
  #xtest=#cs*#xpt-#sn*#ypt
  if #xtest<#xmin
    #xmin=#xtest
  else if #xtest>#xmax
    #xmax=#xtest
  endif
  #ytest=#sn*#xpt+#cs*#ypt
  if #ytest<#ymin
    #ymin=#ytest
  else if #ytest>#ymax
    #ymax=#ytest
  endif
EndSub

! ********** Preamble Section **********
Title "Low Strain, Hypoelastic Tensile Loading"
Name "John Nairn"

! Header
Header
Simple tensile loading on various, hypoelastic, low-strain materials
2D or 3D uniaxial loading by various boundary conditions
Intended for development of these materials
EndHeader

! ------------ Parameters ---------------

! Analysis type: "Plane Strain MPM", "Plane Stress MPM", "Axisymmetric MPM", or "3D MPM"
#analysis = "Plane Stress MPM"

! pick a method usually "lCPDI" or "uGIMP" or "Dirac" or "qCPDI" (2D only) or "B2Spline" or "B2GIMP" or "B2CDPI"
#method = "uGIMP"
#nprocs = 8

! pick strain update method usually "USF" or "USAVG"
#update = "USL-"

! material options: isotropic, trans, ortho, isoplasticity, isosoftening
! bistable, hill (hilliso same as isoplastity properties), viscoelastic, MGviscoelastic,
! isoplasticsoftening, tivisc
! tivisciso (TIViscoleastic using isotropic properties - to compare to viscoelastic)
#matID="isotropic"
#swapz=0			! For TIs >0 moves axial to y, for orthos 1 swaps x/z, >1 swaps y/z
#angle=0			! 2D z rotation angle for anisotopic material properties

! hardening law (if allowed) for current material
!	options Linear, Nonlinear, Nonlinear2, JohnsonCook, Exponential (hill only)
#hardID = "Exponential"

! Dimensions
#cell=1
#length=40			! length
#width=5			! width
#thick=5			! thickness
#hole=-1			! insert holes (only if>0 and rotate=0)

! rotate sample to test off-grid loading (2D only)
#rotate = 0
#ysym="yes"			! makes symmetry plane at y=0 if rotate=0

! Load by strain (estimated for force and traction loads)
#loading = "rigid"	! Loading = "force", "traction", "rigid", "contact", "thermal"
#fixsides = "no"	! "yes" or "no" for sides fixed in y direction (2D) or y and z (3D) or "z" or "y" for 3D in z or y direction only (i.e. plane strain)
#strain = 20			! Maximum strain (%) (stress needed is estimated for force and tractions using base modulus) or dT if thermal
#relRate = 2		! loading rate as percent of wave speed
#factor = 0.3		! time step factor
#ramp="linear"	        ! linear or sigmoidal application of #loading

! Loading rate
#hold = 0		! hold time (multiple of loading time)
#unload = 0		! 0 no unload or >0 for unloading time (multiple of loading time, but at same loading rate)

! Damping parameter - for feedback or regular, depending on BCs
#damp = 0
#fbdamp = 0
#xpic = 0		! <0 for XPIC, >0 for FMPM, 0 for FLIP

! temperature option to test energy coupling
#startTemp = 300
#conduct = "no"		    ! yes or no for conduction
#tmode = "isothermal"		! "isothermal" or adiabatic modes

! Material Definitions
! Each material must use, or change to another value
#Ebase=1000
#rho=1.0
#nuBase=.3
#aBase=60
#yldstrain=2
#Cv=100
#largeRotation=1	! 1 for large rotation method

! Chage for special case materials
if #matID="MGviscoelastic"
  #gamma0 = 0.85
  #C0=2180
  #rho=1.181
  #Cv = 1466
  #Kbase = #rho*#C0^2/1000
  #Gbase = 2320
  #Gbase = 1000
  #Ebase=9*#Kbase*#Gbase/(3*#Kbase+#Gbase)
  #nuBase=(3*#Kbase-2*#Gbase)/(6*#Kbase+2*#Gbase)
  #aBase = #gamma0*#Cv*1e6/(3*#C0*#C0)
endif

#K0=#Ebase/(3*(1-2*#nuBase))
#G0=#Ebase/(2*(1+#nuBase))

! *********************** Start Calculation Commands **************************
! Analysis type
Analysis #analysis
MPMMethod #update,#method
Processors #nprocs
StressFreeTemp #startTemp
Conduction #conduct,#tmode

! ------------ Calculations ---------------

! varies with loading type
if #loading="contact"
  ! convert to contact
  if #strain>0
    Stop "'contact' mode only for compression (could try tension with imperfect interface contact)"
  endif
  MultimaterialMode 0,1,"LogReg",100
  !MultimaterialMode 0,1,"Specify",0

else if #loading="thermal"
  ! Strain is dT and then get expected final thermal strain
  #deltaT=#strain
  #strain=#aBase*#deltaT/10000
  #unload=0

else if #fixsides="no"
  ! stress used by force and tractions
  #stress=#Ebase*#strain/100

else
  ! stress used by force and tractions
  #Kbulk=#Ebase/(2*(1-#nuBase))
  #stress=#Kbulk*#strain/100
endif

! calculate time to reach peak state
!#speed = 1000*sqrt(#Ebase*1000/#rho)		! elastic wave speed in mm/s
#speed=1000*sqrt(1000*(#K0+4*#G0/3)/#rho)	! wave speed (mm/sec)
#disp = #strain*#length/100			        ! mm of displacement
#disprate = #relRate*#speed/100
if #strain<0
  #disprate=-#disprate
endif
#time = abs(1000*#disp/#disprate)

! key times
#t1=#time
#t2=(1+#hold)*#time
#tu=#unload*#time
#t3=#t2+#tu

! get sine and cosine of rotation angle
! Cannot rotate 3D or fixed sides
if #analysis="3D MPM"
  #rotate=0
endif
if #rotate!=0
  #cs=cos(3.14159265*#rotate/180)
  #sn=-sin(3.14159265*#rotate/180)
endif

! Archiving
if #fixsides="no"
  Archive "Results/Tension/"&#analysis&"-"&#method&"-"&#update&"/"&#loading&"/"&#matID
else
  Archive "Results/ConstrainedTension/"&#analysis&"-"&#method&"-"&#update&"/"&#loading&"/"&#matID
endif
#maxTime=#t3
TimeStep 1000,#maxTime,#factor
ArchiveTime #maxTime/100
ToArchive velocity,stress,strain,strainenergy,elementcrossings,rotStrain,workenergy,temperature,heatenergy

Comment "Analysis:"&#analysis&", Material:"&#matID&", shape:"&#method&", update:"&#update
Comment "Loading:"&#loading&", Hardening:"&#hardID&", Thermal:"&#tmode&", Conduction:"&#conduct

! ------------ Material Definitions
#isPlastic="no"
#isVE="no"

if #matID="isotropic"
  Material #matID,"Isotropic Material","Isotropic"
    E #Ebase
    nu #nuBase
    a #aBase
    rho #rho
    Cv #Cv
    kCond .1
    if #largeRotation>0
      largeRotation 1
    endif
  Done
endif

if #matID="isosoftening"
  #isPlastic="yes"
  ToArchive history2,history3,history4
  Material #matID,"Isotropic Softening Material","IsoSoftening"
    rho #rho
    largeRotation 1
    E #Ebase
    nu #nuBase
    a #aBase
    Initiation MaxPrinciple
    sigmac 30
    tauc 10
    SofteningI Linear
    I-Gc 10000
    SofteningII Linear
    II-Gc 10000
  Done
  !  XMLData Material,"isosoftening"
  !  <Material Type="50" Name="Isotropic Softening Material">
  !    <rho>1</rho>
  !    <largeRotation>1</largeRotation>
  !    <E>1000</E>
  !    <nu>0.33</nu>
  !    <alpha>60</alpha>
  !    <Initiation>MaxPrinciple</Initiation>
  !    <sigmac>30</sigmac>
  !    <tauc>10</tauc>
  !    <SofteningI>Linear</SofteningI>
  !    <I-Gc>10000</I-Gc>
  !    <SofteningII>Linear</SofteningII>
  !    <II-Gc>210000</II-Gc>
  !  </Material>
  !  EndXMLData
  
  XMLData Material,"isosoftening2"
  <Material Type="50" Name="Isotropic Softening Material">
    <rho>1</rho>
    <largeRotation>1</largeRotation>
    <E>1000</E>
    <nu>0.33</nu>
    <alpha>60</alpha>
    <!--<sigmac>30</sigmac>
    <tauc>20</tauc>-->
  </Material>
  EndXMLData
endif

if #matID="isoplasticsoftening"
  #isPlastic="yes"
  Material #matID,"Isotropic Softening Material","IsoPlasticSoftening"
    rho #rho
    largeRotation 1
    E #Ebase
    nu #nuBase
    a #aBase
    Initiation MaxPrinciple
    sigmac 14
    tauc 10
    SofteningI Linear
    I-Gc 3000
    SofteningII Linear
    II-Gc 10000
    yield abs(#Ebase*#yldstrain/100)
    Ep #Ebase/2
    kCond .202
    Cv #Cv
  Done
endif

if #matID="isoplasticity"
  #isPlastic="yes"
  Material #matID,"Isotropic Elastic-Plastic Material","IsoPlasticity"
    E #Ebase
    nu #nuBase
    a #aBase
    rho #rho
    if #largeRotation>0
      largeRotation 1
    endif
    if #hardID!=""
      hardening #hardID
    endif
    if #hardID="Linear"
      yield abs(#Ebase*#yldstrain/100)
      Ep #Ebase/5
      kCond .202
      Cv #Cv
    else if #hardID="Nonlinear"
      yield abs(#Ebase*#yldstrain/100)
      Khard 500
      nhard .24
      kCond .202
      Cv #Cv
    else if #hardID="Nonlinear2"
      yield abs(#Ebase*#yldstrain/100)
      Khard 1
      nhard .5
      kCond .202
      Cv #Cv
    else if #hardID="JohnsonCook"
      ! For Copper use E=120000,rho=8.96,nu=.25,alpha=0
      Ajc 90
      Bjc 292
      njc .31
      Cjc 0.025
      ep0jc 1
      Tmjc 1356
      mjc 1.09
      kCond 0.202
      Cv 383
    endif
  Done
endif

if #matID="viscoelastic"
  #isVE="yes"
  #G=#Ebase/(2*(1+#nuBase))
  #frel=.5
  #tauG1=#maxTime/4000
  
  #Kbulk=#Ebase/(3*(1-2*#nuBase))
  #fK=0.8
  #tauK=#maxTime/1000
  Material #matID,"Viscoelastic Material","Viscoelastic"
    if #fK<1
      K #fK*#Kbulk
      Kk (1-#fK)*#Kbulk
      tauKk #tauK
    else
      K #Kbulk
    endif
    G0 #frel*#G
    Gk (1-#frel)*#G
    tauk #tauG1
    a #aBase
    rho #rho
    Cv #Cv
    !Tref 300
  Done
endif

if #matID="MGviscoelastic"
  ToArchive history1,history2
  Material #matID,"MGEOS Viscoelastic Material","Viscoelastic"
    pressureLaw 1
    K #Kbase
    C0 #C0
    gamma0 #gamma0
    S1 2.088
    S2 0
    S3 0
    Kmax 15

    G0 #Gbase
    Gk #Ebase/(4*(1+#nuBase))
    tauk #maxTime/4000
    rho #rho
    Cv #Cv
  Done
  
  CustomTask AdjustTimeStep
  Parameter verbose,1
endif

if #matID="tivisciso"
  #isVE="yes"
  
  #G=#Ebase/(2*(1+#nuBase))
  #fG=.5
  #tauG1=#maxTime/4000
  
  #Kbulk=#Ebase/(3*(1-2*#nuBase))
  #fK=0.8
  #tauK1=#maxTime/1000
  
  Material #matID,"TI Viscoelastic Material, Isotropic Properties","TIViscoelastic"
    GT0 #fG*#G
    Pk (1-#fG)*#G
    tauk #tauG1
    
    GA0 #fG*#G
    Pk (1-#fG)*#G
    tauk #tauG1
    
    if #fK<1
      KT0 #fK*#Kbulk+#fG*#G/3
      Pk (1-#fG)*#G/3
      tauk #tauG1
      Pk (1-#fK)*#Kbulk
      tauk #tauK1
      
      en0 #fK*#Kbulk+4*#fG*#G/3
      Pk 4*(1-#fG)*#G/3
      tauk #tauG1
      Pk (1-#fK)*#Kbulk
      tauk #tauK1
      
      ell0 #fK*#Kbulk-2*#fG*#G/3
      Pk -2*(1-#fG)*#G/3
      tauk #tauG1
      Pk (1-#fK)*#Kbulk
      tauk #tauK1
      
    else
      KT0 #Kbulk+#fG*#G/3
      Pk (1-#fG)*#G/3
      tauk #maxTime/4000
      
      en0 #Kbase+4*#fG*#G/3
      Pk 4*(1-#fG)*#G/3
      tauk #maxTime/4000
      
      ell0 #Kbase-2*#fG*#G/3
      Pk -2*(1-#fG)*#G/3
      tauk #maxTime/4000
    endif
    
    alphaA #aBase
    alphaT #aBase
    rho #rho
    Cv #Cv
    if #swapz>0
      swapz #swapz
    endif
  Done
endif

if #matID="tivisc"
  #isVE="yes"
  
  ! These are "e" or time 0 properties ("e" for elastic)
  #EAe=8000			! for wood it is EL
  #ETe=600			! for wood covers both ER and ET
  #GAe=700			! for wood covers both GLR and GLT (GRT found below)
  #vAe=0.30			! for wood covers both vLR and vLT
  #vTe=0.45			! for wood covers both vRT and vTR
  
  ! evaulated properties
  #GTe=#ETe/(2*(1+#vTe))		! for wood it is GRT, but likely too high
  #KTe=1/(2*(1-#vTe)/#ETe-4*#vAe*#vAe/#EAe)
  #ne=#EAe+4*#KTe*#vAe*#vAe
  #elle=2*#KTe*#vAe
  
  ! #f.. is fraction of that "e" modulus in the constant (i.e., relaxed) term
  ! #tau... is the relaxation time in seconds
  #fGT1=.4
  #tauGT1=#maxTime/10000
  
  #fGA1=.4
  #tauGA1=#maxTime/4000
  
  #fKT1=0.6
  #tauKT1=#maxTime/4000
  
  ! ignored unless #fKT1<1
  #fn1=0.8
  #taun1=10*#tauKT1
  
  ! ell using #tauKT1 (if #fKT1<1)

  ! change in axial Poissons ratio (and check it)
  #vA0=0.45
  #vAmin=(1+(1-#fKT1)/(2*#fKT1))*#vAe
  if #vA0<#vAmin
    Stop "The relaxed axial Poisson ratio needs to be at least "&#vAmin
  endif
  
  Material #matID,"TI Viscoelastic Material","TIViscoelastic"
    GT0 #fGT1*#GTe
    Pk (1-#fGT1)*#GTe
    tauk #tauGT1
    
    GA0 #fGA1*#GAe
    Pk (1-#fGA1)*#GAe
    tauk #tauGA1
    
    if #fKT1<1
      KT0 #fKT1*#KTe
      Pk (1-#fKT1)*#KTe
      tauk #tauKT1
      
      en0 #fn1*#ne
      Pk (1-#fn1)*#ne
      tauk #taun1
      
      ell0 2*#fKT1*#KTe*#vA0
      Pk #elle-2*#fKT1*#KTe*#vA0
      tauk #tauKT1
      
    else
      KT0 #KTe
      en0 #EAe+4*#KTe*#vAe*#vAe
      ell0 2*#KTe*#vAe
    endif
    
    alphaA 0.1*#aBase
    alphaT #aBase
    rho #rho
    Cv #Cv
    if #swapz>0
      swapz #swapz
    endif
  Done
endif

if #matID="bistable"
  ToArchive history1
  Material #matID,"Two State Material","Bistable"
    K0 #Ebase/(3*(1-2*#nuBase))
    G0 #Ebase/(2*(1+#nuBase))
    a0 #aBase
    Kd 0.5*#Ebase/(3*(1-2*#nuBase))
    Gd 0.5*#Ebase/(2*(1+#nuBase))
    DeltaVOffset 0
    critical #strain/4
    transition "dilation"
    reversible "yes"
    rho #rho
    if #largeRotation>0
      largeRotation 1
    endif
  Done
endif

if #matID="trans"
  Material #matID,"Transversely Isotropic Material","Transverse"
    ET #Ebase
    EA #Ebase/5
    nuA .1
    nuT #nuBase
    GA #Ebase/5
    aA #aBase/5
    aT #aBase
    rho #rho
    if #largeRotation>0
      largeRotation 1
    endif
    if #swapz>0
      swapz #swapz
    endif
  Done
endif

if #matID="ortho"
  Material #matID,"Orthotropic Material","Orthotropic"
    Ex #Ebase
    Ey #Ebase/10
    Ez #Ebase/5
    nuxy .25
    nuxz .30
    nuyz .35
    Gxy #Ebase/5
    Gxz #Ebase/7
    Gyz #Ebase/10
    ax 20
    ay 40
    az 60
    rho #rho
    if #largeRotation>0
      largeRotation 1
    endif
    if #swapz>0
      swapz #swapz
    endif
  Done
endif

if #matID="hilliso"
  #isPlastic="yes"
  #iyld=abs(#Ebase*#yldstrain/100)
  Material #matID,"Orthotropic Hill Plastic/Isotropic Properties","HillPlastic"
    Ex #Ebase
    Ey #Ebase
    Ez #Ebase
    nuxy #nuBase
    nuxz #nuBase
    nuyz #nuBase
    Gxy #Ebase/(2*(1+#nuBase))
    Gxz #Ebase/(2*(1+#nuBase))
    Gyz #Ebase/(2*(1+#nuBase))
    ax #aBase
    ay #aBase
    az #aBase
    rho #rho
    yldxx #iyld
    yldyy #iyld
    yldzz #iyld
    yldxy #iyld/sqrt(3)
    yldxz #iyld/sqrt(3)
    yldyz #iyld/sqrt(3)
    Khard #Ebase/(5*#iyld)
    !Khard 0
    nhard 1
    Cv #Cv
    kcondx .202
    kcondy .202
    kcondz .202
  Done
endif

if #matID="hill"
  #isPlastic="yes"
  #iyld=abs(#Ebase*#yldstrain/100)
  Material #matID,"Orthotropic Hill Plastic","HillPlastic"
    Ex #Ebase
    Ey #Ebase/10
    Ez #Ebase/5
    nuxy .25
    nuxz .25
    nuyz .35
    Gxy #Ebase/5
    Gxz #Ebase/5
    Gyz #Ebase/10
    ax 20
    ay 40
    az 60
    rho #rho
    yldxx #iyld
    yldyy #iyld
    yldzz #iyld
    yldxy #iyld/sqrt(3)
    yldxz #iyld/sqrt(3)
    yldyz #iyld/sqrt(3)
    if #hardID="Linear"
      Khard #Ebase/(5*#iyld)
      nhard 1
    else if #hardID="Nonlinear"
      Khard #Ebase/(5*#iyld)
      nhard .5
    else if #hardID="Nonlinear2"
      Khard #Ebase/(5*#iyld)
      nhard -.5
    else if #hardID="Exponential"
      Khard #Ebase/(5*#iyld)
      exphard 10
    endif
  Done
endif

! add rigid materials
! displacement functions for rigid materials
if #ramp="sigmoidal"
  if #unload=0
    #rfxn = "*sinbox(pi/2,t/"&#t1&")"
    !#rfxn = "10*sinbox(pi/2,10*t/"&#t1&")"	!10X faster, rest same
  else
    #rfxn = "*(sinbox(pi/2,t/"&#t1&")+sinbox(-pi/2,(t-"&#t2&")/"&#tu&"))"
  endif
else
  if #unload=0
    #rfxn = "*box(1,t/"&#t1&")"
  else
    #rfxn = "*(box(1,t/"&#t1&")+box(-1,(t-"&#t2&")/"&#tu&"))"
  endif
endif
#ke=0
if #loading="rigid"
  Material "rigid","Loading Clamp","RigidBC"
    if #rotate!=0
      direction 3
      SettingFunction (#cs*#disprate)&#rfxn
      SettingFunction2 (#sn*#disprate)&#rfxn
    else
      direction 1
      SettingFunction #disprate&#rfxn
      mirrored 1
    endif
  Done
  Comment "Displacement rate = "&(#disprate/1000)&" m/sec"
  #ke = (1/6)*#rho*#disprate*#disprate*#length*#width*#thick/10^6
  Comment "Base kinetic energy = "&(#ke/10^6)&" J"
  GlobalArchive "reactionx","rigid"

else if #loading="contact"
  Material "rigid","Loading Clamp","RigidContact"
    if #rotate!=0
      SettingFunctionx (#cs*#disprate)&#rfxn
      SettingFunctiony (#sn*#disprate)&#rfxn
    else
      SettingFunction #disprate&#rfxn
    endif
  Done
  
  Material "friction","Contact Loading Law","CoulombFriction"
    coeff 0
  Done
  ContactMM "friction"

endif

! Turn on damping and archiving for damping
if #fbdamp>0
  FeedbackDamping #fbdamp,#ke
  GlobalArchive alpha
  GlobalArchive "Kinetic Energy"
endif
if #damp>1
  Damping #damp
endif

! additional and global archive
if #isPlastic="yes"
  ToArchive plasticstrain,plasticenergy,history1,temperature
endif

GlobalArchiveTime #maxTime/200
GlobalArchive sxx,#matID
GlobalArchive syy,#matID
GlobalArchive szz,#matID
GlobalArchive exx,#matID
GlobalArchive eyy,#matID
GlobalArchive ezz,#matID
GlobalArchive "Strain Energy",#matID
if #isPlastic="yes"
  GlobalArchive exxe,#matID
  GlobalArchive exxp,#matID
  GlobalArchive eyye,#matID
  GlobalArchive eyyp,#matID
  GlobalArchive exye,#matID
  GlobalArchive exyp,#matID
  GlobalArchive ezze,#matID
  GlobalArchive ezzp,#matID
  GlobalArchive "Plastic Energy",#matID
endif
if #isVE="yes"
  ToArchive plasticenergy,temperature
  GlobalArchive "Plastic Energy",#matID
endif
if #tmode!="isothermal"
  GlobalArchive temp,#matID
  GlobalArchive "Heat Energy",#matID
else if #matID="MGviscoelastic"
  GlobalArchive "Heat Energy",#matID
  GlobalArchive "Internal Energy",#matID
endif

! reaction and contact forces
if #rotate!=0
  #rID=-1
else
  #rID=-10
endif
GlobalArchive "reactionx",#rID
if #loading="contact"
  GlobalArchive "contactx"
endif

! Grid dimensions
#gleft=-#cell
if #strain<0
  #gright=#length+4*#cell
  #sides=(int(-#strain*#width/200/#cell)+2)
else
  #xtra=(int(2*#strain*#length/100/#cell)+2)
  #gright=#length+#xtra*#cell
  #sides=4
endif
#gbot=-#sides*#cell
#gtop=#width+#sides*#cell
#zmin=-#sides*#cell
#zmax=#thick+#sides*#cell

! adjust grid limits if rotated
if #rotate!=0
  #xmin=0.5*(#gleft+#gright)
  #xmax=#xmin
  #ymin=0.5*(#gbot+#gtop)
  #ymax=#ymin

  GoSub CheckPoint,#gleft,#gbot
  GoSub CheckPoint,#gright,#gbot
  GoSub CheckPoint,#gright,#gtop
  GoSub CheckPoint,#gleft,#gtop

  #gleft=#cell*int(#xmin/#cell)
  #gright=#cell*int(#xmax/#cell)
  #gbot=#cell*int(#ymin/#cell)
  #gtop=#cell*int(#ymax/#cell)
endif

! ********** Grid and Material Points Section **********

! x uses symmetry plane BC (unless rotated)
if #rotate!=0
  GridHoriz int((#gright-#gleft)/#cell+.5)
  GridVert int((#gtop-#gbot)/#cell+.5)
else
  GridHoriz int((#gright-#gleft)/#cell+.5),0,-1
  if #ysym="yes"
    GridVert int((#gtop-#gbot)/#cell+.5),0,-1
  else
    GridVert int((#gtop-#gbot)/#cell+.5)
  endif
endif

if #analysis="3D MPM"
  if #ysym="yes"
    GridDepth int((#zmax-#zmin)/#cell+.5),0,-1
  else
    GridDepth int((#zmax-#zmin)/#cell+.5)
  endif
  GridRect #gleft,#gright,#gbot,#gtop,#zmin,#zmax
  
  ! material points for object
  if #matID="isosoftening"
    Region #matID,0,0,#thick,"temp",#startTemp
      Box #length/8,7*#length/8,0,#width,0,#thick
    EndRegion
    Region "isosoftening2",0,0,#thick,"temp",#startTemp
      Box 0,#length,0,#width,0,#thick
    EndRegion
  else
    Region #matID,0,0,0,"angle",#angle,"temp",#startTemp
      Rotate "y",90 ! to rotate TI z axis to x loading direction
      Box 0,#length,0,#width,0,#thick
    EndRegion
  endif
else
  GridThickness #thick
  GridRect #gleft,#gright,#gbot,#gtop
  
  ! material points
  if #rotate!=0
    Region #matID,0,0,#thick,"angle",#angle,"temp",#startTemp
      PolyPt 0,0
      PolyPt #cs*#length,#sn*#length
      PolyPt #cs*#length-#sn*#width,#sn*#length+#cs*#width
      PolyPt -#sn*#width,#cs*#width
    EndRegion
  else
    if #hole>0
      Hole
        Oval (#length-#hole)/2,(#length+#hole)/2,(#width-#hole)/2,(#width+#hole)/2
        Oval (#length-8*#hole)/2,(#length-6*#hole)/2,(#width-#hole)/2,(#width+#hole)/2
        Oval (#length+6*#hole)/2,(#length+8*#hole)/2,(#width-#hole)/2,(#width+#hole)/2
      EndHole
    endif
    if #matID="isosoftening"
      Region #matID,0,0,#thick,"temp",#startTemp
        Rect #length/8,7*#length/8,0,#width
      EndRegion
      Region "isosoftening2",0,0,#thick,"temp",#startTemp
        Rect 0,#length,0,#width
      EndRegion
    else
      Region #matID,0,0,#thick,"angle",#angle,"temp",#startTemp
        Rect 0,#length,0,#width
      EndRegion
    endif
  endif
endif

! ********** Boundary Condition Section **********

! loading conditions
! rigid or contact - loading by function calculated above
! force - load until #stress in #time and then hold
! traction - load until #stress in #time and then hold
! thermal - load until #deltaT in #time and then hold

! force and traction ramps
if #ramp="sigmoidal"
  if #unload>0
    #tpart="*(cosramp(1,t/"&#t1&")+cosramp(-1,(t-"&#t2&")/"&#tu&"))"
  else
    #tpart="*cosramp(1,t/"&#t1&")"
  endif
else
  if #unload>0
    #tpart="*(ramp(1,t/"&#t1&")+ramp(-1,(t-"&#t2&")/"&#tu&"))"
  else
    #tpart="*ramp(1,t/"&#t1&")"
  endif
endif

ifStr #loading="rigid"
  if #analysis="3D MPM"
    Region "rigid",1,0,0
      Box #length,#length+#cell,-#sides*#cell,#width+#sides*#cell,-#sides*#cell,#thick+#sides*#cell
    EndRegion
  else if #rotate!=0
    Region "rigid",1,0,#thick
      PolyPt #cs*#length+#sn*#sides*#cell,#sn*#length-#cs*#sides*#cell
      PolyPt #cs*(#length+#cell)+#sn*#sides*#cell,#sn*(#length+#cell)-#cs*#sides*#cell
      PolyPt #cs*(#length+#cell)-#sn*(#width+#sides*#cell),#sn*(#length+#cell)+#cs*(#width+#sides*#cell)
      PolyPt #cs*#length-#sn*(#width+#sides*#cell),#sn*#length+#cs*(#width+#sides*#cell)
    EndRegion
  else
    Region "rigid",1,0,#thick
      Rect #length,#length+#cell,-#sides*#cell,#width+#sides*#cell
    EndRegion
  endif
  
else if #loading="contact"
  if #analysis="3D MPM"
    Region "rigid",1,0,0
      Box #length,#length+#cell,-#sides*#cell,#width+#sides*#cell,-#sides*#cell,#thick+#sides*#cell
    EndRegion
  else if #rotate!=0
    Region "rigid",1,0,#thick
      PolyPt #cs*#length+#sn*#sides*#cell,#sn*#length-#cs*#sides*#cell
      PolyPt #cs*(#length+#cell)+#sn*#sides*#cell,#sn*(#length+#cell)-#cs*#sides*#cell
      PolyPt #cs*(#length+#cell)-#sn*(#width+#sides*#cell),#sn*(#length+#cell)+#cs*(#width+#sides*#cell)
      PolyPt #cs*#length-#sn*(#width+#sides*#cell),#sn*#length+#cs*(#width+#sides*#cell)
    EndRegion
  else
    Region "rigid",1,0,#thick
      Rect #length,#length+#cell,-#sides*#cell,#width+#sides*#cell
    EndRegion
  endif
  
else ifStr #loading="force"
  #force=#stress*#width*#thick		! total force
  Comment "Stress rate = "&(#stress/#time)&" MPa/msec"
  if #analysis="3D MPM"
    ParticleBC
      Box #length-#cell/2,#length,0,#width,0,#thick
      LoadType net
      Load x,function,#force&#tpart,0,-1
    EndParticleBC
  else if #rotate!=0
    #x1=#cs*(#length-#cell/4)
    #y1=#sn*(#length-#cell/4)
    #x2=#cs*(#length-#cell/4)-#sn*#width
    #y2=#sn*(#length-#cell/4)+#cs*#width
    ParticleBC
      Line #x1,#x2,#y1,#y2,#cell/4
      LoadType net
      Load x,function,(#cs*#force)&#tpart,0,-1
      Load y,function,(#sn*#force)&#tpart,0,-1
    EndParticleBC
  else
    ParticleBC
      Rect #length-#cell/2,#length,0,#width
      LoadType net
      Load x,function,(#force)&#tpart,0,-1
    EndParticleBC
  endif

else ifStr #loading="traction"
  Comment "Stress rate = "&(#stress/#time)&" MPa/msec"
  if #analysis="3D MPM"
    ParticleBC
      Box #length-#cell/2,#length,0,#width,0,#thick
      Traction x,2,function,#stress&#tpart,0
    EndParticleBC
  else if #rotate!=0
    Stop "Traction loads cannot be used with rotated specimens (yet)"
  else
    ParticleBC
      Rect #length-#cell/2,#length,0,#width
      Traction x,2,function,#stress&#tpart,0
    EndParticleBC
  endif

else ifStr #loading="thermal"
  CustomTask "PropertyRamp"
  Parameter "time",#time
  Parameter "Delta",#deltaT
  if #ramp="sigmoidal"
    Parameter "sigmoidal",1
  endif
endif

! Fixed bottom by symmetry plane unless rotated
if #rotate!=0
  BoundaryID -1
  #midpt=-#cs*#cell/2+#sn*#sides*#cell
  #y1=-#sn*#cell/2-#cs*#sides*#cell
  #midpt2=-#cs*#cell/2-#sn*(#width+#sides*#cell)
  #y2=-#sn*#cell/2+#cs*(#width+#sides*#cell)
  GridBC
    Line #midpt,#midpt2,#y1,#y2,#cell
    Velocity skewxy,constant,0,0,#rotate
  EndGridBC
  BoundaryID
endif

! Fixed sides
if #fixsides!="no"
  if #analysis="3D MPM"
    #midpt=-#cell/2
    if #fixsides!="z"
      GridBC
        Box #gleft,#gright,-1.01*#cell,.01*#cell,#zmin,#zmax
        Velocity y,constant,0
      EndGridBC
      GridBC
        Box #gleft,#gright,#width-.01*#cell,#width+1.01*#cell,#zmin,#zmax
        Velocity y,constant,0
      EndGridBC
    endif
    if #fixsides!="y"
      GridBC
        Box #gleft,#gright,#gbot,#gtop,-1.01*#cell,.01*#cell
        Velocity z,constant,0
      EndGridBC
      GridBC
        Box #gleft,#gright,#gbot,#gtop,#thick-.01*#cell,#thick+1.01*#cell
        Velocity z,constant,0
      EndGridBC
    endif
  else if #rotate!=0
    Stop "Fixed sides cannot be used with rotated specimens (yet)"
  else
    #midpt=-#cell/2
    GridBC
      Line #gleft,#gright,#midpt,#midpt,#cell
      Velocity y,constant,0
    EndGridBC
    #midpt=#width+#cell/2
    GridBC
      Line #gleft,#gright,#midpt,#midpt,#cell
      Velocity y,constant,0
    EndGridBC
  endif
endif

! 3D Archived
if #analysis="3D MPM"
  CustomTask "VTKArchive"
  Parameter "mass"
  Parameter "material"
  Parameter "stress"
  Parameter "strain"
  Parameter "velocity"
  Parameter "displacement"
  Parameter "strainenergy"
  if #isPlastic="yes"
    Parameter "plasticstrain"
    Parameter "plasticenergy"
  endif
endif

if #xpic!=0
  CustomTask "PeriodicXPIC"
  if #xpic<0
    Parameter "XPICOrder",-#xpic
  else
    Parameter "FMPMOrder",#xpic
  endif
  Parameter "periodicSteps",1
endif
